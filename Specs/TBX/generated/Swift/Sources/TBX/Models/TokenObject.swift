//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class TokenObject: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** The Token ID */
    public var token: String

    public var idp: Idp

    /** The Token type */
    public var type: String

    public var expiration: Date?

    public var remainingCredits: Double?

    public var uses: Double?

    public init(token: String, idp: Idp, type: String, expiration: Date? = nil, remainingCredits: Double? = nil, uses: Double? = nil) {
        self.token = token
        self.idp = idp
        self.type = type
        self.expiration = expiration
        self.remainingCredits = remainingCredits
        self.uses = uses
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        token = try jsonDictionary.json(atKeyPath: "token")
        idp = try jsonDictionary.json(atKeyPath: "idp")
        type = try jsonDictionary.json(atKeyPath: "type")
        expiration = jsonDictionary.json(atKeyPath: "expiration")
        remainingCredits = jsonDictionary.json(atKeyPath: "remainingCredits")
        uses = jsonDictionary.json(atKeyPath: "uses")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        dictionary["token"] = token
        dictionary["idp"] = idp.encode()
        dictionary["type"] = type
        if let expiration = expiration?.encode() {
            dictionary["expiration"] = expiration
        }
        if let remainingCredits = remainingCredits {
            dictionary["remainingCredits"] = remainingCredits
        }
        if let uses = uses {
            dictionary["uses"] = uses
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(Swift.type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

extension TokenObject {

    
    public struct Idp: Codable {
        
        public var code: String?
        public var description: String?

        public init(code: String? = nil, description: String? = nil) {
            self.code = code
            self.description = description
        }
    }

}
